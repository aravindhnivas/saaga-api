---
# This workflow do testing and linting on the files every time changes are committed and pushed to GitHub.
name: Checks

# This particular GitHub action runs on 'push' - any push of changes to our project triggers the jobs in this yml file.
on: [push]

jobs:
  # Define new job called test-lint.
  test-lint:
    name: Test and Lint
    # OS that the project is going to run on. Docker-compose is pre0installed in the ubuntu-20.04 runner.
    runs-on: ubuntu-20.04
    # Steps that run for the job.
    steps:
      - name: Login to Docker Hub
        # Use pre-made action available on the GitHub Actions repo. This docker/login-action is used to log into Docker. @v1 specifies the version.
        uses: docker/login-action@v1
        # Pass in username and password parameters, defined in the repo secrets.
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        # Make sure the code is checked out and available for us to run the next 'test' and 'lint' steps.
        uses: actions/checkout@v2
      - name: Test
        # Define the environment variables which are confidential and defined in the repo secrets.
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_PORT: ${{ secrets.DB_PORT }}
        # Run the command that is used to run unit tests on our project.
        run: docker-compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
      - name: Lint
        # Run the command that is used to run linting.
        run: docker-compose run --rm app sh -c "flake8"
